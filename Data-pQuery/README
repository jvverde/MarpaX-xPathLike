NAME
    Data::pQuery - a xpath like processor for json like data-objects (hashes
    and arrays)! It looks for data-objects which match the pQuery expression
    and returns a list with matched data-objects

VERSION
    Version 0.02

SYNOPSIS
    How to use it.

            use Data::pQuery;

            ($\,$,) = ("\n",",");
            my $query = Data::pQuery->compile('a.*');
            my $data = {a => { b => 'bb', c => 'cc'}, aa => 'aa'};
            my $results = $query->process($data);
            my @values = $results->getvalues();
            print @values;                          #outputs 'bb,cc'
            my @refs = $results->getrefs();
            ${$refs[0]} = 'new value';
            print $data->{a}->{b};                  #outputs 'new value'

Data::pQuery methods
  new(pQuery)
    Used only internally!!! Do nothing;

  compile(pQueryString)
            my $query = Data::pQuery->compile('*');
            my @values1 = $query->process({fruit => 'bananas'})->getvalues();
            # @values1 = (bananas)

            my @values2 = $query->process({
                    fruit => 'bananas', 
                    vegetables => 'orions'
            })->getvalues();
            # @values2 = (bananas, orions)

            my @values3 = $query->process({
                    food => {fruit => 'bananas'}
            })->getvalues();
            # @values3 = ({fruit => 'bananas'})

    Receives a pQuery string compile it and return a Data::pQuery::Processor
    object

  process(dataRef)
            my $process = Data::pQuery->process({
                    food => {
                            fruit => 'bananas',
                            vegetables => 'unions'
                    },
                    drinks => {
                            wine => 'Porto',
                            water => 'Evian'
                    }
            });
            my @values1 = $process->compile('*.*')->getvalues();
            print @values1; # Evian,Porto,bananas,unions

            my @values2 = $process->compile('*.wine')->getvalues();
            print @values2; # Porto

            #using a filter {condition}.  
            my @values3 = $process->compile('*{fruit}.*')->getvalues();
            print @values3; # bananas,unions

            #using another filter
            my @values4 = $process->compile('*.*{value() ~ /an/}')->getvalues();
            print @values4; # Evian,bananas

    Receives a hash or array reference and return a Data::pQuery::Compiler
    object.

Data::pQuery::Processor methods
  process(data)
    Executes the query over data and returns a Data::pQuery::util object

Data::pQuery::Compiler methods
  compile(pQueryString)dd
    Compile a pQuery string, query the data and returns a Data::pQuery::util
    object

Data::pQuery::util methods
  getrefs()
Returns a list o references for each matched data-object;
  getvalues()
Returns a list of values for each matched data-object;
AUTHOR
    Isidro Vila Verde, `<jvverde at gmail.com>'

BUGS
    Send email to `<jvverde at gmail.com>' with subject Data::pQuery

SUPPORT
    You can find documentation for this module with the perldoc command.

        perldoc Data::pQuery
    =cut

LICENSE AND COPYRIGHT
    Copyright 2013 Isidro Vila Verde.

    This program is free software; you can redistribute it and/or modify it
    under the terms of the the Artistic License (2.0). You may obtain a copy
    of the full license at:

    http://www.perlfoundation.org/artistic_license_2_0

    Any use, modification, and distribution of the Standard or Modified
    Versions is governed by this Artistic License. By using, modifying or
    distributing the Package, you accept this license. Do not use, modify,
    or distribute the Package, if you do not accept this license.

    If your Modified Version has been derived from a Modified Version made
    by someone other than you, you are nevertheless required to ensure that
    your Modified Version complies with the requirements of this license.

    This license does not grant you the right to use any trademark, service
    mark, tradename, or logo of the Copyright Holder.

    This license includes the non-exclusive, worldwide, free-of-charge
    patent license to make, have made, use, offer to sell, sell, import and
    otherwise transfer the Package with respect to any patent claims
    licensable by the Copyright Holder that are necessarily infringed by the
    Package. If you institute patent litigation (including a cross-claim or
    counterclaim) against any party alleging that the Package constitutes
    direct or contributory patent infringement, then this Artistic License
    to you shall terminate on the date that such litigation is filed.

    Disclaimer of Warranty: THE PACKAGE IS PROVIDED BY THE COPYRIGHT HOLDER
    AND CONTRIBUTORS "AS IS' AND WITHOUT ANY EXPRESS OR IMPLIED WARRANTIES.
    THE IMPLIED WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR
    PURPOSE, OR NON-INFRINGEMENT ARE DISCLAIMED TO THE EXTENT PERMITTED BY
    YOUR LOCAL LAW. UNLESS REQUIRED BY LAW, NO COPYRIGHT HOLDER OR
    CONTRIBUTOR WILL BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, OR
    CONSEQUENTIAL DAMAGES ARISING IN ANY WAY OUT OF THE USE OF THE PACKAGE,
    EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.

